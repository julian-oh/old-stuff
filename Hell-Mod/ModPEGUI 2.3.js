///* -------- ModPEGUI API -------- *///
///* -------- Version: 2.3 -------- *///
///* ------ By: @TaQuItO_988 ------ *///



/// - ######################################## - ///
/// - ############# - MOD CORE - ############# - ///
/// - ######################################## - ///



ModPE.getOption = function(key){
    var file = new java.io.File("/sdcard/games/com.mojang/minecraftpe/options.txt");
    var br = new java.io.BufferedReader(new java.io.InputStreamReader(new java.io.FileInputStream(file)));
    var read, option;
    while((read = br.readLine()) != null){
        if(read.split(":")[0]==key){
            option = read.split(":")[1];
            break;
        }
    }
    br.close();
    return option;
};
ModPE.timer = function(ticks,seconds,action){
	new java.lang.Thread(new java.lang.Runnable({run:function(){
		for(let tick=0;tick<=ticks;tick++){
			action(tick);
			java.lang.Thread.sleep(seconds*1000/ticks);
		}
	}})).start();
};
ModPE.writeFileFromByteArray = function(byteArray,path){
	var file = new java.io.File(path);
	file.getParentFile().mkdirs();
	var stream = new java.io.FileOutputStream(file);
	stream.write(byteArray);
	stream.close();
};
ModPE.writeFileFromByteArray(android.util.Base64.decode("",0),new android.os.Environment.getExternalStorageDirectory()+"/games/com.mojang/minecraft.ttf")
var GuiData = {};
GuiData.context = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
GuiData.minecraftFont = android.graphics.Typeface.createFromFile("/sdcard/games/com.mojang/minecraft.ttf");
GuiData.guiScale = Math.ceil(android.util.TypedValue.applyDimension(android.util.TypedValue.COMPLEX_UNIT_DIP,2,GuiData.context.getResources().getDisplayMetrics())-1+parseInt(ModPE.getOption("gfx_guiscale_offset")));
GuiData.getScreenWidth = ()=> Math.round(GuiUtils.getScreenWidth()/GuiData.guiScale);
GuiData.getScreenHeight = ()=> Math.round(GuiUtils.getScreenHeight()/GuiData.guiScale);
var GuiUtils = {
	//Desno365's Immersive mode support
	getScreenWidth:function(){
		if(android.os.Build.VERSION.SDK_INT>=17){
			var uiFlags = GuiData.context.getWindow().getDecorView().getSystemUiVisibility();
			if((uiFlags&android.view.View.SYSTEM_UI_FLAG_HIDE_NAVIGATION)!==0){
				var metrics = new android.util.DisplayMetrics();
				GuiData.context.getWindowManager().getDefaultDisplay().getRealMetrics(metrics);
				var realWidth = metrics.widthPixels;
				var realHeight = metrics.heightPixels;
				if(realHeight>realWidth){
					var x = realHeight;
					realHeight = realWidth;
					realWidth = x;
				}
				return realWidth;
			}else
				return GuiData.context.getScreenWidth();
		}else
			return GuiData.context.getScreenWidth();
	},
	getScreenHeight:function(){
		if(android.os.Build.VERSION.SDK_INT>=17){
			var uiFlags = GuiData.context.getWindow().getDecorView().getSystemUiVisibility();
			if((uiFlags&android.view.View.SYSTEM_UI_FLAG_HIDE_NAVIGATION)!==0){
				var metrics = new android.util.DisplayMetrics();
				GuiData.context.getWindowManager().getDefaultDisplay().getRealMetrics(metrics);
				var realWidth = metrics.widthPixels;
				var realHeight = metrics.heightPixels;
				if(realHeight>realWidth){
					var x = realHeight;
					realHeight = realWidth;
					realWidth = x;
				}
				return realHeight;
			}else
				return GuiData.context.getScreenHeight();
		}else
			return GuiData.context.getScreenHeight();
	},
	uiThread:function(functionToRun){
		GuiData.context.runOnUiThread(new java.lang.Runnable(){
			run:function(){
				try{
					functionToRun();
				}catch(e){
					clientMessage("Error: "+e);
				}
			}
		});
	},
	addTouchFunction(myView,pressFunction,unpressFunction){
		myView.setOnTouchListener(new android.view.View.OnTouchListener(){
			onTouch:function(view,event){
				switch(event.getAction()){
					case 0:pressFunction(view);break;
					case 1:unpressFunction(view);break;
				}
				return false;
			}
		});
	},
	addClickFunction(myView,clickAction){
		myView.setOnClickListener(new android.view.View.OnClickListener(){
			onClick:function(v){
				clickAction(v);
			}
		});
	},
	addLongClickFunction:function(myView,clickAction){
		myView.setOnLongClickListener(new android.view.View.OnLongClickListener(){
			onLongClick:function(view,time){
				clickAction(view,time);
				return true;
			}
		});
	},
	createLayoutView:function(widgetType,x,y,width,height){
		var layoutParams = new android.widget.RelativeLayout.LayoutParams(width,height);
		layoutParams.setMargins(x,y,0,0);
		widgetType.setLayoutParams(layoutParams);
		return widgetType;
	}
};
var BitmapUtils = {
	getDrawable:(bitmap) => new android.graphics.drawable.BitmapDrawable(bitmap),
	getFromFile:(direction) => new android.graphics.BitmapFactory.decodeFile("/sdcard/"+direction),
	getFromTexture:(direction) => new android.graphics.BitmapFactory.decodeStream(ModPE.openInputStreamFromTexturePack(direction)),
	getTrimmed:(bitmap,x,y,width,height) => new android.graphics.Bitmap.createBitmap(bitmap,x,y,width,height),
	getScaled:(bitmap,newWidth,newHeight) => new android.graphics.Bitmap.createScaledBitmap(bitmap,newWidth,newHeight,false),
	saveInFile:(bitmap,path,imageName) => {			
		var file = new java.io.File(android.os.Environment.getExternalStorageDirectory().getAbsolutePath()+path);
		file.getParentFile().mkdirs();
		var fOut = new java.io.FileOutputStream(file);
		bitmap.compress(android.graphics.Bitmap.CompressFormat.PNG,100,fOut);
		fOut.flush();
		fOut.close();
	}
};
var ImageUtils = {
	getDrawable:(bitmap) => BitmapUtils.getDrawable(BitmapUtils.getScaled(bitmap,bitmap.getWidth()*GuiData.guiScale,bitmap.getHeight()*GuiData.guiScale)),
	getFromFile:(direction) => ImageUtils.getDrawable(BitmapUtils.getFromFile(direction)),
	getFromTexture:(direction) => ImageUtils.getDrawable(BitmapUtils.getFromTexture(direction)),
	getTrimmed:(bitmap,x,y,width,height) => ImageUtils.getDrawable(BitmapUtils.getTrimmed(bitmap,x,y,width,height)),
	getScaled:(bitmap,newWidth,newHeight) => BitmapUtils.getDrawable(BitmapUtils.getScaled(bitmap,GuiData.guiScale*newWidth,GuiData.guiScale*newHeight)),
	//Affogatoman's Method
	getStretched:(bm,x,y,stretchWidth,stretchHeight,width,height) => {//Affogatoman's Method
		var scale = GuiData.guiScale;
		var bm = BitmapUtils.getScaled(bm,bm.getWidth()*scale,bm.getHeight()*scale); var x=x*scale; var y=y*scale; var stretchWidth=stretchWidth*scale; var stretchHeight=stretchHeight*scale; var width=width*scale; var height=height*scale;
		var blank = android.graphics.Bitmap.createBitmap(width,height,android.graphics.Bitmap.Config.ARGB_8888);
		var Bitmap = android.graphics.Bitmap;
		var part1 = Bitmap.createBitmap(bm,0,0,x,y);
		var part2 = Bitmap.createBitmap(bm,x,0,stretchWidth,y);
		var part3 = Bitmap.createBitmap(bm,x+stretchWidth,0,bm.getWidth()-x-stretchWidth,y);
		var part4 = Bitmap.createBitmap(bm,0,y,x,stretchHeight);
		var part5 = Bitmap.createBitmap(bm,x,y,stretchWidth,stretchHeight);
		var part6 = Bitmap.createBitmap(bm,x+stretchWidth,y,bm.getWidth()-x-stretchWidth,stretchHeight);
		var part7 = Bitmap.createBitmap(bm,0,y+stretchHeight,x,bm.getHeight()-y-stretchHeight);
		var part8 = Bitmap.createBitmap(bm,x,y+stretchHeight,stretchWidth,bm.getHeight()-y-stretchHeight);
		var part9 = Bitmap.createBitmap(bm,x+stretchWidth,y+stretchHeight,bm.getWidth()-x-stretchWidth,bm.getHeight()-y-stretchHeight);	
		var canvas = new android.graphics.Canvas(blank);
		canvas.drawBitmap(part1,0,0,null);
		canvas.drawBitmap(Bitmap.createScaledBitmap(part2,width-bm.getWidth()+stretchWidth,y,false),x,0,null);
		canvas.drawBitmap(part3,width-bm.getWidth()+stretchWidth+x,0,null);
		canvas.drawBitmap(Bitmap.createScaledBitmap(part4,x,height-bm.getHeight()+stretchHeight,false),0,y,null);
		canvas.drawBitmap(Bitmap.createScaledBitmap(part5,width-bm.getWidth()+stretchWidth,height-bm.getHeight()+stretchHeight,false),x,y,null);
		canvas.drawBitmap(Bitmap.createScaledBitmap(part6,part3.getWidth(),height-bm.getHeight()+stretchHeight,false),width-bm.getWidth()+stretchWidth+x,y,null);
		canvas.drawBitmap(part7,0,height-bm.getHeight()+stretchHeight+y,null);
		canvas.drawBitmap(Bitmap.createScaledBitmap(part8,width-bm.getWidth()+stretchWidth,part7.getHeight(),false),x,height-bm.getHeight()+stretchHeight+y,null);
		canvas.drawBitmap(part9,width-bm.getWidth()+stretchWidth+x,height-bm.getHeight()+stretchHeight+y,null);	
		return new android.graphics.drawable.BitmapDrawable(blank);
	}
};
var Background = {
    dirt:function(){
		var dirt = ImageUtils.getFromTexture("textures/gui/bg32.png");
		dirt.setTileModeXY(android.graphics.Shader.TileMode.REPEAT,android.graphics.Shader.TileMode.REPEAT);
		return dirt;
	},
	portal:function(){
		var portal = ImageUtils.getFromTexture("textures/gui/portalBg.png");
		portal.setTileModeXY(android.graphics.Shader.TileMode.REPEAT,android.graphics.Shader.TileMode.REPEAT);
		return portal;
	},
	durabilityBar:function(leftUses,maxUses){
		var blank = android.graphics.Bitmap.createBitmap(13,2,android.graphics.Bitmap.Config.ARGB_8888);
		var canvas = new android.graphics.Canvas(blank);
		var paint = new android.graphics.Paint();	
		var progress = Math.round(12*(leftUses/maxUses));
		var colors = [[0,0,0],[252,0,0],[231,21,0],[210,42,0],[189,63,0],[168,84,0],[147,105,0],[126,126,0],[105,147,0],[84,168,0],[63,189,0],[42,210,0],[21,231,0]];
		paint.setColor(android.graphics.Color.BLACK);
		canvas.drawRect(0,0,13,2,paint);	
		paint.setColor(android.graphics.Color.rgb(63,63,63));
		canvas.drawRect(0,0,12,1,paint);
		paint.setColor(android.graphics.Color.rgb(colors[progress][0],colors[progress][1],colors[progress][2]));
		canvas.drawRect(0,0,progress,1,paint);
		return ImageUtils.getDrawable(blank);
	},
	loadingBar:function(width,percent,color){
		var blank = android.graphics.Bitmap.createBitmap(width,2,android.graphics.Bitmap.Config.ARGB_8888);
		var canvas = new android.graphics.Canvas(blank);
		var paint = new android.graphics.Paint();	
		var progress = Math.round(width*percent/100);
		paint.setColor(android.graphics.Color.rgb(74,74,74));
		canvas.drawRect(0,0,width,2,paint);	
		paint.setColor(android.graphics.Color.rgb(128,255,128));
		if(typeof color == "string")paint.setColor(android.graphics.Color.parseColor(color));
		if(progress>=1)canvas.drawRect(0,0,progress,2,paint);	
		return ImageUtils.getDrawable(blank);
	},
	progressBar:function(sections,percent,color){	
		var colorMatrix = new android.graphics.ColorMatrix();colorMatrix.setSaturation(0);
		var filter = new android.graphics.ColorMatrixColorFilter(colorMatrix);	
		var paint = new android.graphics.Paint();paint.setColorFilter(filter);	
		var blank = android.graphics.Bitmap.createBitmap(sections*12+1,5,android.graphics.Bitmap.Config.ARGB_8888);
		var canvas = new android.graphics.Canvas(blank);	
		var empty = BitmapUtils.getTrimmed(BitmapUtils.getFromTexture("textures/gui/newgui/EventBars.png"),0,0,13,5);	
		for(let i=0;i<sections;i++){canvas.drawBitmap(empty,12*i,0,null);}		
		if(Math.round(sections*12*percent/100)>0){
			var filledBlank = android.graphics.Bitmap.createBitmap(sections*12+1,5,android.graphics.Bitmap.Config.ARGB_8888);
			var filledCanvas = new android.graphics.Canvas(filledBlank);
			var filled = BitmapUtils.getTrimmed(BitmapUtils.getFromTexture("textures/gui/achievements/hotdogfull.png"),0,0,13,5);	
			for(let i=0;i<sections;i++){filledCanvas.drawBitmap(filled,12*i,0,paint);}
			var progress = BitmapUtils.getTrimmed(filledBlank,0,0,Math.round(sections*12*percent/100),5);	
			canvas.drawBitmap(progress,0,0,null);	
		}	
		var nub = BitmapUtils.getTrimmed(BitmapUtils.getFromTexture("textures/gui/achievements/nub.png"),0,0,11,5);	
		for(let i=0;i<sections-1;i++){canvas.drawBitmap(nub,7+12*i,0,paint);}
		var final = ImageUtils.getDrawable(blank);
		final.setColorFilter(android.graphics.Color.parseColor(color),android.graphics.PorterDuff.Mode.MULTIPLY);	
		return final;
	},
	sliderBox:{
		normal:function(width,progress,parts,sectioned){	
			var blank = android.graphics.Bitmap.createBitmap(width,16,android.graphics.Bitmap.Config.ARGB_8888);
			var canvas = new android.graphics.Canvas(blank);
			var paint = new android.graphics.Paint();		
			paint.setColor(android.graphics.Color.rgb(0,0,0));
			canvas.drawRect(2,2,width-2,14,paint);		
			paint.setColor(android.graphics.Color.rgb(64,64,64));		
			canvas.drawRect(3,3,width-3,13,paint);
			paint.setColor(android.graphics.Color.rgb(128,128,128));		
			canvas.drawRect(3,3,3+(progress/parts)*(width-6),13,paint);		
			if(sectioned){
				for(let section=1;section<parts;section++){
					var position = 3+(section*((width-6)/parts));
					paint.setColor(position-1>(3+(progress/parts)*(width-6)) ? android.graphics.Color.rgb(128,128,128):android.graphics.Color.rgb(64,64,64));
					canvas.drawRect(position-1,5,position+1,11,paint);
				}
			}
			return ImageUtils.getDrawable(blank);
		},
		hover:function(width,progress,parts,sectioned){
			var blank = android.graphics.Bitmap.createBitmap(width,16,android.graphics.Bitmap.Config.ARGB_8888);
			var canvas = new android.graphics.Canvas(blank);
			var paint = new android.graphics.Paint();		
			paint.setColor(android.graphics.Color.rgb(255,255,255));
			canvas.drawRect(2,2,width-2,14,paint);		
			paint.setColor(android.graphics.Color.rgb(73,79,128));		
			canvas.drawRect(3,3,width-3,13,paint);		
			paint.setColor(android.graphics.Color.rgb(130,140,204));		
			canvas.drawRect(3,3,3+(progress/parts)*(width-6),13,paint);		
			if(sectioned){
				for(let section=1;section<parts;section++){
					var position = 3+(section*((width-6)/parts));
					paint.setColor(position-1>(3+(progress/parts)*(width-6)) ? android.graphics.Color.rgb(130,140,204):android.graphics.Color.rgb(73,79,128));
					canvas.drawRect(position-1,5,position+1,11,paint);
				}
			}
			return ImageUtils.getDrawable(blank);
		}
	},
	lightButton:{
		default_normal:(width,height)=>ImageUtils.getStretched(BitmapUtils.getFromTexture("textures/gui/newgui/buttons/borderless/light.png"),1,1,2,2,width,height),
		default_hover:(width,height)=>ImageUtils.getStretched(BitmapUtils.getFromTexture("textures/gui/newgui/buttons/borderless/lighthover.png"),1,1,2,2,width,height),
		pressed_normal:(width,height)=>ImageUtils.getStretched(BitmapUtils.getFromTexture("textures/gui/newgui/buttons/borderless/lightpressednohover.png"),1,1,2,2,width,height),
		pressed_hover:(width,height)=>ImageUtils.getStretched(BitmapUtils.getFromTexture("textures/gui/newgui/buttons/borderless/lightpressed.png"),1,1,2,2,width,height),
	},
	darkButton:{
		default_normal:(width,height)=>ImageUtils.getStretched(BitmapUtils.getFromTexture("textures/gui/newgui/buttons/borderless/dark.png"),1,1,2,2,width,height),
		default_hover:(width,height)=>ImageUtils.getStretched(BitmapUtils.getFromTexture("textures/gui/newgui/buttons/borderless/darkhover.png"),1,1,2,2,width,height),
		pressed_normal:(width,height)=>ImageUtils.getStretched(BitmapUtils.getFromTexture("textures/gui/newgui/buttons/borderless/darkpressednohover.png"),1,1,2,2,width,height),
		pressed_hover:(width,height)=>ImageUtils.getStretched(BitmapUtils.getFromTexture("textures/gui/newgui/buttons/borderless/darkpressed.png"),1,1,2,2,width,height),
	},
	dialog:{
		hollow1:function(width,height){	
			var blank = android.graphics.Bitmap.createBitmap(18,101,android.graphics.Bitmap.Config.ARGB_8888);
			var canvas = new android.graphics.Canvas(blank);		
			var paint = new android.graphics.Paint();paint.setAlpha(192);
			canvas.drawBitmap(BitmapUtils.getTrimmed(BitmapUtils.getFromTexture("textures/gui/newgui/dialog-background-atlas.png"),0,0,18,101),0,0,null);//Frame
			canvas.drawBitmap(BitmapUtils.getTrimmed(BitmapUtils.getFromTexture("textures/gui/newgui/dialog-background-atlas.png"),14,101,2,2),8,23,paint);//Panel
			return ImageUtils.getStretched(blank,8,23,2,2,width,height);
			
		},
		hollow2:function(width,height){
			var blank = android.graphics.Bitmap.createBitmap(18,67,android.graphics.Bitmap.Config.ARGB_8888);
			var canvas = new android.graphics.Canvas(blank);		
			var paint = new android.graphics.Paint();paint.setAlpha(192);
			canvas.drawBitmap(BitmapUtils.getTrimmed(BitmapUtils.getFromTexture("textures/gui/newgui/dialog-background-atlas.png"),18,0,18,67),0,0,null);//Frame
			canvas.drawBitmap(BitmapUtils.getTrimmed(BitmapUtils.getFromTexture("textures/gui/newgui/dialog-background-atlas.png"),14,101,2,2),8,23,paint);//Panel
			return ImageUtils.getStretched(blank,8,23,2,2,width,height);
		},
		hollow3:function(width,height){
			var blank = android.graphics.Bitmap.createBitmap(18,33,android.graphics.Bitmap.Config.ARGB_8888);
			var canvas = new android.graphics.Canvas(blank);		
			var paint = new android.graphics.Paint();paint.setAlpha(192);
			canvas.drawBitmap(BitmapUtils.getTrimmed(BitmapUtils.getFromTexture("textures/gui/newgui/dialog-background-atlas.png"),36,0,18,33),0,0,null);//Frame
			canvas.drawBitmap(BitmapUtils.getTrimmed(BitmapUtils.getFromTexture("textures/gui/newgui/dialog-background-atlas.png"),14,101,2,2),8,23,paint);//Panel
			return ImageUtils.getStretched(blank,8,23,2,2,width,height);
		},
		hollow4:function(width,height){
			var blank = android.graphics.Bitmap.createBitmap(18,18,android.graphics.Bitmap.Config.ARGB_8888);
			var canvas = new android.graphics.Canvas(blank);		
			var paint = new android.graphics.Paint();paint.setAlpha(192);
			canvas.drawBitmap(BitmapUtils.getTrimmed(BitmapUtils.getFromTexture("textures/gui/newgui/dialog-background-atlas.png"),54,0,18,18),0,0,null);//Frame
			canvas.drawBitmap(BitmapUtils.getTrimmed(BitmapUtils.getFromTexture("textures/gui/newgui/dialog-background-atlas.png"),14,101,2,2),8,8,paint);//Panel
			return ImageUtils.getStretched(blank,8,8,2,2,width,height);
		}
	}
};
var ModPEGUI = {
	setText:function(textView,text,shadow,textColor,textSize){
		var colors = [[" "," &nbsp;"],["\n","<br/>"],["§l","</b><b>"],["§m","</del><del>"],["§n","</ins><ins>"],["§o","</i><i>"],["§r","</font></b></del></ins></i>"],["§0","</font><font color=#000000>"],["§1","</font><font color=#0000AA>"],["§2","</font><font color=#00AA00>"],["§3","</font><font color=#00AAAA>"],["§4","</font><font color=#AA0000>"],["§5","</font><font color=#AA00AA>"],["§6","</font><font color=#FFAA00>"],["§7","</font><font color=#AAAAAA>"],["§8","</font><font color=#555555>"],["§9","</font><font color=#5555FF>"],["§a","</font><font color=#55FF55>"],["§b","</font><font color=#55FFFF>"],["§c","</font><font color=#FF5555>"],["§d","</font><font color=#FF55FF>"],["§e","</font><font color=#FFFF55>"],["§f","</font><font color=#FFFFFF>"]];
		colors.forEach(function(e,i){text = text.split(e[0]).join(e[1]);});
		textSize = typeof textSize === "number" ? textSize*GuiData.guiScale : 8*GuiData.guiScale;
		textColor = typeof textColor === "string" ? textColor : "#E1E1E1";
		textView.setText(android.text.Html.fromHtml(text));		
		textView.setTypeface(GuiData.minecraftFont);
		textView.setTextSize(android.util.TypedValue.COMPLEX_UNIT_PX,textSize);
		textView.setTextColor(android.graphics.Color.parseColor(textColor));
		textView.setLayerType(android.view.View.LAYER_TYPE_SOFTWARE,null);
		textView.setPaintFlags(textView.getPaintFlags()|android.graphics.Paint.SUBPIXEL_TEXT_FLAG);
		textView.setAllCaps(false);
		shadow ? textView.setShadowLayer(0.00001,Math.ceil(GuiData.guiScale*(textSize/(GuiData.guiScale*8))),Math.ceil(GuiData.guiScale*(textSize/(GuiData.guiScale*8))),android.graphics.Color.DKGRAY) : null;
	},
	button:function(type,x,y,width,height,action){	
		var that = this;	
		this.enabled = true;
		this.pressed = false;
		this.hover = false;		
		this.widget = GuiUtils.createLayoutView(new android.widget.RelativeLayout(GuiData.context),x*GuiData.guiScale,y*GuiData.guiScale,width*GuiData.guiScale,height*GuiData.guiScale);	
		this.widget.setClickable(true);
		this.panel = GuiUtils.createLayoutView(new android.widget[type](GuiData.context),GuiData.guiScale,GuiData.guiScale,(width-2)*GuiData.guiScale,(height-2)*GuiData.guiScale);
		this.panel.setClickable(false);	
		this.border = GuiUtils.createLayoutView(new android.widget.ImageView(GuiData.context),0,0,width*GuiData.guiScale,height*GuiData.guiScale);
		this.border.setBackgroundDrawable(ImageUtils.getStretched(BitmapUtils.getTrimmed(BitmapUtils.getFromTexture("textures/gui/newgui/focusBorder.png"),0,0,5,5),1,1,3,3,width,height));
		this.border.setClickable(false);	
		this.widget.addView(this.panel);
		this.widget.addView(this.border);	
		this.widget.setOnTouchListener(new android.view.View.OnTouchListener({onTouch:function(view,event){
			if(that.enabled){
				switch(event.getActionMasked()){				
					case android.view.MotionEvent.ACTION_DOWN:{that.setPressed(true);that.setHover(true);break;}				
					case android.view.MotionEvent.ACTION_MOVE:{if(event.getX()<0||event.getY()<0||event.getX()>width*GuiData.guiScale||event.getY()>height*GuiData.guiScale){that.setPressed(false);that.setHover(false);var current = true;}else if(!current){that.setHover(true);}break;}					
					case android.view.MotionEvent.ACTION_UP:{that.setPressed(false);that.setHover(false);if(current!==false&&!(event.getX()<0||event.getY()<0||event.getX()>(width*GuiData.guiScale)||event.getY()>(height*GuiData.guiScale))){Level.playSoundEnt(Player.getEntity(),"random.click",8);typeof action === "function" ? action() : null;}var current = false;break;}
					case android.view.MotionEvent.ACTION_CANCEL:{that.setPressed(false);that.setHover(false);current = false;break;}				
				}
			}
			return false;
		}}));	
		this.renderOn = function(panel){
			panel.widget.addView(this.widget);
		};
		this.setHover = function(hover){
			this.hover = hover;
			this.onHover(hover);
		};	
		this.setPressed = function(pressed){
			this.pressed = pressed;
			this.onPress(pressed);
		};
		this.setEnabled = function(enabled){		
			this.widget.setAlpha(enabled?1:0.4);
			this.widget.setClickable(enabled);
			this.enabled = enabled;
		};
		this.isEnabled = function(){
			return this.enabled;
		};
	},
	contentPanel:function(x,y,width,height){
		var helper = function(){
			this.enabled = true;
			this.widget = GuiUtils.createLayoutView(new android.widget.RelativeLayout(GuiData.context),x*GuiData.guiScale,y*GuiData.guiScale,width*GuiData.guiScale,height*GuiData.guiScale);
			this.renderOn = function(panel){
				panel.widget.addView(this.widget);
			};
			this.setEnabled = function(enabled){
				this.enabled = enabled;
				this.widget.setAlpha(enabled?1:0.4);
				this.widget.setClickable(enabled);
			};
			this.isEnabled = function(){
				return this.enabled;
			};
		};
		return new helper();
	},
	custom:function(type,x,y,width,height){
		var helper = function(){
			this.enabled = true;
			this.widget = GuiUtils.createLayoutView(new android.widget[type](GuiData.context),x*GuiData.guiScale,y*GuiData.guiScale,width*GuiData.guiScale,height*GuiData.guiScale);
			this.renderOn = function(panel){
				panel.widget.addView(this.widget);
			};
			this.setEnabled = function(enabled){
				this.enabled = enabled;
				this.widget.setAlpha(enabled?1:0.4);
				this.widget.setClickable(enabled);
			};
			this.isEnabled = function(){
				return this.enabled;
			};
		};
		return new helper();
	},
	imageButton:function(defaultNormal,defaultHover,pressedNormal,pressedHover,x,y,width,height,action){
		var helper = function(){
			var that = this;	
			var backgrounds = {
				default_normal:defaultNormal,
				default_hover:defaultHover,
				pressed_normal:pressedNormal,
				pressed_hover:pressedHover
			};
			this.enabled = true;
			this.pressed = false;
			this.hover = false;		
			this.widget = GuiUtils.createLayoutView(new android.widget.Button(GuiData.context),x*GuiData.guiScale,y*GuiData.guiScale,width*GuiData.guiScale,height*GuiData.guiScale);	
			this.widget.setClickable(true);
			this.widget.setOnTouchListener(new android.view.View.OnTouchListener({onTouch:function(view,event){
				try{if(that.enabled){
					switch(event.getActionMasked()){
						case android.view.MotionEvent.ACTION_DOWN:{that.setPressed(true);that.setHover(true);break;}				
						case android.view.MotionEvent.ACTION_MOVE:{if(event.getX()<0||event.getY()<0||event.getX()>width*GuiData.guiScale||event.getY()>height*GuiData.guiScale){that.setPressed(false);that.setHover(false);var current = true;}else if(!current){that.setHover(true);}break;}					
						case android.view.MotionEvent.ACTION_UP:{that.setPressed(false);that.setHover(false);if(current!==false&&!(event.getX()<0||event.getY()<0||event.getX()>(width*GuiData.guiScale)||event.getY()>(height*GuiData.guiScale))){Level.playSoundEnt(Player.getEntity(),"random.click",8);typeof action === "function" ? action() : null;}var current = false;break;}
						case android.view.MotionEvent.ACTION_CANCEL:{that.setPressed(false);that.setHover(false);current = false;break;}				
					}
				}}catch(e){print(e)}
				return false;
			}}));	
			this.renderOn = function(panel){
				panel.widget.addView(this.widget);
			};
			this.setHover = function(hover){
				this.hover = hover;
				switch(hover){
					case true:that.widget.setBackgroundDrawable(that.pressed ? backgrounds.pressed_hover : backgrounds.default_hover);break;
					case false:that.widget.setBackgroundDrawable(that.pressed ? backgrounds.pressed_normal : backgrounds.default_normal);break;
				}			
			};
			this.setHover(false);
			this.setPressed = function(pressed){
				this.pressed = pressed;
				switch(pressed){
					case true:that.widget.setBackgroundDrawable(that.hover ? backgrounds.pressed_hover : backgrounds.pressed_normal);break;
					case false:that.widget.setBackgroundDrawable(that.hover ? backgrounds.default_hover : backgrounds.default_normal);break;
				}
			};
			this.setPressed(false);
			this.setEnabled = function(enabled){
				this.enabled = enabled;
				this.widget.setAlpha(enabled?1:0.4);
				this.widget.setClickable(enabled);
			};
			this.isEnabled = function(){
				return this.enabled;
			};
		}
		return new helper();
	},
	dialog:function(type,width,height){
		var that = this;
		this.shown = false;
		this.widget = GuiUtils.createLayoutView(new android.widget.RelativeLayout(GuiData.context),(GuiUtils.getScreenWidth()/2)-(width*GuiData.guiScale/2),(GuiUtils.getScreenHeight()/2)-(height*GuiData.guiScale/2),width*GuiData.guiScale,height*GuiData.guiScale);
		this.widget.setBackgroundDrawable(Background.dialog["hollow"+type](width,height));
		this.frame = new android.widget.RelativeLayout(GuiData.context);
		this.frame.addView(this.widget);
		this.window = new android.widget.PopupWindow(this.frame,GuiUtils.getScreenWidth(),GuiUtils.getScreenHeight());
		this.show = function(){
			GuiUtils.uiThread(function(){
				if(!that.shown){
					that.window.showAtLocation(GuiData.context.getWindow().getDecorView(),android.view.Gravity.CENTER,0,0);
					that.shown = true;
				}
			});
		};
		this.close = function(){
			GuiUtils.uiThread(function(){
				if(that.shown){
					that.window.dismiss();
					that.shown = false
				}
			});
		};
	},
	image:function(image,x,y,width,height){
		var helper = function(){
			this.enabled = true;
			this.widget = GuiUtils.createLayoutView(new android.widget.ImageView(GuiData.context),x*GuiData.guiScale,y*GuiData.guiScale,width*GuiData.guiScale,height*GuiData.guiScale);
			this.widget.setBackgroundDrawable(image);
			this.renderOn = function(panel){
				panel.widget.addView(this.widget);
			};
			this.setEnabled = function(enabled){
				this.enabled = enabled;
				this.widget.setAlpha(enabled?1:0.4);
				this.widget.setClickable(enabled);
			};
			this.isEnabled = function(){
				return this.enabled;
			};
		};
		return new helper();
	},
	toggle:function(x,y,width,height,press,unpress){	
		var that = this;	
		this.enabled = true;
		this.hover = false;
		this.toggled = false;	
		this.widget = GuiUtils.createLayoutView(new android.widget.RelativeLayout(GuiData.context),x*GuiData.guiScale,y*GuiData.guiScale,width*GuiData.guiScale,height*GuiData.guiScale);	
		this.widget.setClickable(true);		
		this.widget.setOnTouchListener(new android.view.View.OnTouchListener({onTouch:function(view,event){
			if(that.enabled){
				switch(event.getActionMasked()){
					case android.view.MotionEvent.ACTION_MOVE:{if(event.getX()<0||event.getY()<0||event.getX()>width*GuiData.guiScale||event.getY()>height*GuiData.guiScale){that.setHover(false);var current = true;}else if(!current){that.setHover(true);}break;}		
					case android.view.MotionEvent.ACTION_UP:{that.setHover(false);if(current!==false&&!(event.getX()<0||event.getY()<0||event.getX()>(width*GuiData.guiScale)||event.getY()>(height*GuiData.guiScale))){Level.playSoundEnt(Player.getEntity(),"random.click",8);that.setToggled(!that.toggled);that.toggled ? (typeof(press)==="function"?press():null) : (typeof(unpress)==="function"?unpress():null);}var current = false;break;}				
					case android.view.MotionEvent.ACTION_CANCEL:{that.setHover(false);current = false;break;}				
				}
			}
			return false;
		}}));	
		this.renderOn = function(panel){
			panel.widget.addView(this.widget);
		};	
		this.setHover = function(hover){
			this.hover = hover;
			this.onHover(hover);
		};		
		this.setToggled = function(toggled){
			this.toggled = toggled;
			this.onToggle(toggled);
		};
		this.isToggled = function(){
			return this.toggled;
		};
		this.setEnabled = function(enabled){		
			this.widget.setAlpha(enabled?1:0.4);
			this.widget.setClickable(enabled);
			this.enabled = enabled;
		};
		this.isEnabled = function(){
			return this.enabled;
		};
	},
	label:function(text,x,y,width,height,color,shadow,size,gravity,lineSpacing){
		var helper = function(){
			this.enabled = true;
			this.text = text;
			this.widget = GuiUtils.createLayoutView(new android.widget.TextView(GuiData.context),x*GuiData.guiScale,y*GuiData.guiScale,width*GuiData.guiScale,height*GuiData.guiScale);
			this.widget.setGravity(gravity!==undefined?gravity:android.view.Gravity.CENTER);
			this.widget.setLineSpacing(lineSpacing!==undefined?lineSpacing*GuiData.guiScale:0,1);
			ModPEGUI.setText(this.widget,text,shadow,color,size);
			this.renderOn = function(panel){
				panel.widget.addView(this.widget);
			};
			this.setEnabled = function(enabled){
				this.enabled = enabled;
				this.widget.setAlpha(enabled?1:0.4);
				this.widget.setClickable(enabled);
			};
			this.isEnabled = function(){
				return this.enabled;
			};
			this.getText = function(){
				return this.text;
			};
			this.setText = function(text){
				ModPEGUI.setText(this.widget,text,shadow,color,size);
				this.text = text;
			};
		};
		return new helper();
	},
	loadingBar:function(x,y,width,color){
		var helper = function(){
			this.enabled = true;
			this.progress = 0;
			this.color = color;
			this.widget = GuiUtils.createLayoutView(new android.widget.ImageView(GuiData.context),x*GuiData.guiScale,y*GuiData.guiScale,width*GuiData.guiScale,2*GuiData.guiScale);
			this.widget.setBackgroundDrawable(Background.loadingBar(width,0,color));
			this.renderOn = function(panel){
				panel.widget.addView(this.widget);
			};
			this.setProgress = function(percent){
				this.widget.setBackgroundDrawable(Background.loadingBar(width,percent,this.color));
				this.progress = percent;
			};
			this.getProgress = function(){
				return this.progress;
			};
			this.setEnabled = function(enabled){
				this.enabled = enabled;
				this.widget.setAlpha(enabled?1:0.4);
				this.widget.setClickable(enabled);
			};
			this.isEnabled = function(){
				return this.enabled;
			};
		};
		return new helper();
	},
	notification:function(icon,topText,bottomText){
		var helper = function(){
			this.shown = false;	
			this.showAnimation = new android.view.animation.TranslateAnimation(0,0,-30*GuiData.guiScale,0); this.showAnimation.setDuration(500);
			this.hideAnimation = new android.view.animation.TranslateAnimation(0,0,0,-30*GuiData.guiScale); this.hideAnimation.setDuration(500);	
			this.widget = new android.widget.RelativeLayout(GuiData.context);	
			this.widget.setBackgroundDrawable(ImageUtils.getStretched(BitmapUtils.getFromTexture("textures/gui/greyBorder.png"),4,4,8,8,GuiData.getScreenWidth(),30));
			this.widget.setPadding(6*GuiData.guiScale,6*GuiData.guiScale,6*GuiData.guiScale,6*GuiData.guiScale);
			this.icon = GuiUtils.createLayoutView(new android.widget.ImageView(GuiData.context),1*GuiData.guiScale,1*GuiData.guiScale,16*GuiData.guiScale,16*GuiData.guiScale);	
			this.topText = GuiUtils.createLayoutView(new android.widget.TextView(GuiData.context),24*GuiData.guiScale,0*GuiData.guiScale,GuiUtils.getScreenWidth(),8*GuiData.guiScale);
			this.bottomText = GuiUtils.createLayoutView(new android.widget.TextView(GuiData.context),24*GuiData.guiScale,10*GuiData.guiScale,GuiUtils.getScreenWidth(),8*GuiData.guiScale);	
			this.widget.addView(this.icon);
			this.widget.addView(this.topText);
			this.widget.addView(this.bottomText);	
			this.window = new android.widget.PopupWindow(this.widget,GuiUtils.getScreenWidth(),30*GuiData.guiScale);	
			this.show = function(icon,topText,bottomText){
				var that = this;
				GuiUtils.uiThread(function(){
					if(!that.shown){
						Level.playSoundEnt(Player.getEntity(),"random.toast",16);
						that.icon.setBackgroundDrawable(icon);
						ModPEGUI.setText(that.topText,topText,false,"#FFFFFF");
						ModPEGUI.setText(that.bottomText,bottomText,false,"#FFFFFF");				
						that.window.showAtLocation(GuiData.context.getWindow().getDecorView(),android.view.Gravity.CENTER|android.view.Gravity.TOP,0,0);
						that.shown = true;
						new android.os.Handler().postDelayed(function(){that.widget.startAnimation(that.showAnimation);},1);
						new android.os.Handler().postDelayed(function(){that.hide();},3500);
					}
				});
			};
			this.hide = function(){
				var that = this;
				GuiUtils.uiThread(function(){
					that.widget.startAnimation(that.hideAnimation);				
					new android.os.Handler().postDelayed(function(){that.window.dismiss();that.shown = false;},500);
				});
			};	
		}
		return new helper();
	},
	progressBar:function(x,y,sections,color){
		var helper = function(){
			this.enabled = true;
			this.progress = 0;
			this.sections = sections;
			this.color = color;
			this.widget = GuiUtils.createLayoutView(new android.widget.ImageView(GuiData.context),x*GuiData.guiScale,y*GuiData.guiScale,(sections*12+1)*GuiData.guiScale,5*GuiData.guiScale);
			this.widget.setBackgroundDrawable(Background.progressBar(sections,0,color));
			this.renderOn = function(panel){
				panel.widget.addView(this.widget);
			};
			this.setProgress = function(percent){
				this.widget.setBackgroundDrawable(Background.progressBar(this.sections,percent,this.color));
				this.progress = percent;
			};
			this.getProgress = function(){
				return this.progress;
			};
			this.setEnabled = function(enabled){
				this.enabled = enabled;
				this.widget.setAlpha(enabled?1:0.4);
				this.widget.setClickable(enabled);
			};
			this.isEnabled = function(){
				return this.enabled;
			};		
		};
		return new helper();
	},
	screen:function(x,y,width,height,gravHoriz,gravVert){
		var helper = function(){
			this.shown = false;
			this.x = typeof x == "number" ? x*GuiData.guiScale : 0;
			this.y = typeof y == "number" ? y*GuiData.guiScale : 0;
			this.width = typeof width == "number" ? width*GuiData.guiScale : GuiUtils.getScreenWidth();
			this.height = typeof height == "number" ? height*GuiData.guiScale : GuiUtils.getScreenHeight();
			this.gravHoriz = typeof gravHoriz == "string" ? gravHoriz.toUpperCase() : "CENTER";
			this.gravVert = typeof gravVert == "string" ? gravVert.toUpperCase() : "CENTER";
			this.widget = new android.widget.RelativeLayout(GuiData.context);		
			this.window = new android.widget.PopupWindow(this.widget,this.width,this.height);		
			this.widget.setTag({"popup_window":this.window});
			this.show = function(){
				var that = this;
				GuiUtils.uiThread(function(){
					if(!that.shown){
						that.window.showAtLocation(GuiData.context.getWindow().getDecorView(),android.view.Gravity[that.gravHoriz]|android.view.Gravity[that.gravVert],that.x,that.y);
						that.shown = true;
					}
				});
			};
			this.close = function(){
				var that = this;
				GuiUtils.uiThread(function(){
					if(that.shown){
						that.window.dismiss();
						that.shown = false;
					}							
				});
			};	
		}
		return new helper();
	},
	scrollingPanel:function(x,y,width,height,type,orientation){
		var helper = function(){
			this.enabled = true;
			this.widget = new android.widget[type=="content"?"RelativeLayout":"LinearLayout"](GuiData.context);
			type=="stack"?this.widget.setOrientation(android.widget.LinearLayout[orientation=="horizontal"?"HORIZONTAL":"VERTICAL"]):null;
			this.scroll = GuiUtils.createLayoutView(new android.widget[orientation=="horizontal"?"HorizontalScrollView":"ScrollView"](GuiData.context),x*GuiData.guiScale,y*GuiData.guiScale,width*GuiData.guiScale,height*GuiData.guiScale);		
			this.scroll.setOverScrollMode(android.view.View.OVER_SCROLL_NEVER);
			this.scroll.setVerticalScrollBarEnabled(false);
			this.scroll.setHorizontalScrollBarEnabled(false);
			this.scroll.addView(this.widget);
			this.renderOn = function(panel){
				panel.widget.addView(this.scroll);
			};
			this.setEnabled = function(enabled){
				this.enabled = enabled;
				this.widget.setAlpha(enabled?1:0.4);
				this.widget.setClickable(enabled);
			};
			this.isEnabled = function(){
				return this.enabled;
			};
		};
		return new helper();	
	},
	sliderBox:function(x,y,width,parts,sectioned){
		var helper = function(){
			var that = this;
			this.enabled = true;
			this.hover = false;
			this.progress = 0;
			this.parts = parts-1;
			this.sectioned = sectioned;	
			this.widget = GuiUtils.createLayoutView(new android.widget.RelativeLayout(GuiData.context),x*GuiData.guiScale,y*GuiData.guiScale,width*GuiData.guiScale,16*GuiData.guiScale);
			this.widget.setClickable(true);
			this.thumb = GuiUtils.createLayoutView(new android.widget.ImageView(GuiData.context),0,0,10*GuiData.guiScale,16*GuiData.guiScale);	
			this.widget.addView(this.thumb);
			this.widget.setOnTouchListener(new android.view.View.OnTouchListener({onTouch:function(view,event){
				if(that.enabled){
					switch(event.getActionMasked()){
						case android.view.MotionEvent.ACTION_MOVE:{
							event.getX()<0||event.getY()<0||event.getX()>(width-4)*GuiData.guiScale||event.getY()>16*GuiData.guiScale ? that.setHover(false) : that.setHover(true);					
							that.thumb.getLayoutParams().setMargins(event.getX()<0 ? 0 : event.getX()>(width-10)*GuiData.guiScale?(width-10)*GuiData.guiScale:event.getX(),0,0,0);
							that.thumb.setLayoutParams(that.thumb.getLayoutParams());						
							that.progress = Math.round(that.thumb.getX()/GuiData.guiScale*that.parts/(width-10));
							break;
						}				
						case android.view.MotionEvent.ACTION_UP:{
							if(that.sectioned){
								that.thumb.getLayoutParams().setMargins((that.progress/that.parts)*((width-10)*GuiData.guiScale),0,0,0);
								that.thumb.setLayoutParams(that.thumb.getLayoutParams());
							}
							that.setHover(false);
							break;
						}
						case android.view.MotionEvent.ACTION_DOWN:{that.setHover(true);break;}
						case android.view.MotionEvent.ACTION_CANCEL:{that.setHover(false);break;}		
					}			
				}
				return false;
			}}));
			this.renderOn = function(panel){
				panel.widget.addView(this.widget);
			};
			this.setHover = function(hover){switch(hover){
				case true:this.widget.setBackgroundDrawable(Background.sliderBox.hover(width,this.progress,this.parts,this.sectioned));this.thumb.setBackgroundDrawable(ImageUtils.getStretched(BitmapUtils.getTrimmed(BitmapUtils.getFromTexture("textures/gui/newgui/ButtonWithBorderHover.png"),0,0,6,6),2,2,2,2,10,16));break;
				case false:this.widget.setBackgroundDrawable(Background.sliderBox.normal(width,this.progress,this.parts,this.sectioned));this.thumb.setBackgroundDrawable(ImageUtils.getStretched(BitmapUtils.getTrimmed(BitmapUtils.getFromTexture("textures/gui/newgui/ButtonWithBorder.png"),0,0,6,6),2,2,2,2,10,16));break;
			}};
			this.setEnabled = function(enabled){
				this.enabled = enabled;
				this.widget.setAlpha(enabled?1:0.4);
				this.widget.setClickable(enabled);
			};
			this.isEnabled = function(){
				return this.enabled;
			};
			this.getProgress = function(){
				return this.progress;
			};
			this.setHover(false);
		};
		return new helper();
	},
	stackPanel:function(x,y,width,height,orientation){
		var helper = function(){
			this.enabled = true;
			this.widget = GuiUtils.createLayoutView(new android.widget.LinearLayout(GuiData.context),x*GuiData.guiScale,y*GuiData.guiScale,width*GuiData.guiScale,height*GuiData.guiScale);
			this.widget.setOrientation(android.widget.LinearLayout[orientation.toUpperCase()]);
			this.renderOn = function(panel){
				panel.widget.addView(this.widget);
			};
			this.setEnabled = function(enabled){
				this.enabled = enabled;
				this.widget.setAlpha(enabled?1:0.4);
				this.widget.setClickable(enabled);
			};
			this.isEnabled = function(){
				return this.enabled;
			};
		};
		return new helper();
	},
	textEditBox:function(text,x,y,width,height){
		var helper = function(){
			var that = this;	
			this.enabled = true;
			this.hover = false;
			this.text = text;
			this.baseBackground = ImageUtils.getStretched(BitmapUtils.getTrimmed(BitmapUtils.getFromTexture("textures/gui/newgui/text_edit_base.png"),0,0,6,6),2,2,2,2,width,height);
			this.hoverBackground = ImageUtils.getStretched(BitmapUtils.getTrimmed(BitmapUtils.getFromTexture("textures/gui/newgui/text_edit_hover.png"),0,0,6,6),2,2,2,2,width,height);
			this.widget = GuiUtils.createLayoutView(new android.widget.EditText(GuiData.context),x*GuiData.guiScale,y*GuiData.guiScale,width*GuiData.guiScale,height*GuiData.guiScale);	
			this.widget.setBackgroundDrawable(this.baseBackground);
			this.widget.setPadding(3*GuiData.guiScale,3*GuiData.guiScale,3*GuiData.guiScale,3*GuiData.guiScale);
			this.widget.setClickable(true);
			ModPEGUI.setText(this.widget,text,false,"#FFFFFF");
			this.widget.setOnTouchListener(new android.view.View.OnTouchListener({onTouch:function(view,event){
				if(that.enabled){
					switch(event.getActionMasked()){
						case android.view.MotionEvent.ACTION_MOVE:{if(event.getX()<0||event.getY()<0||event.getX()>width*GuiData.guiScale||event.getY()>height*GuiData.guiScale){that.setHover(false);var current = true;}else if(!current){that.setHover(true);}break;}		
						case android.view.MotionEvent.ACTION_UP:{that.setHover(false);if(current!==false&&!(event.getX()<0||event.getY()<0||event.getX()>(width*GuiData.guiScale)||event.getY()>(height*GuiData.guiScale))){/*function*/}var current = false;break;}
						case android.view.MotionEvent.ACTION_CANCEL:{that.setHover(false);current = false;break;}
					}
				}
				return false;
			}}));		
			/*GuiUtils.addClickFunction(this.widget,function(){try{
				var popup = that.panel.widget.getTag()["popup_window"];
				popup.setFocusable(true);
				popup.update();
			}catch(e){print(e)}});*/	
			this.renderOn = function(panel){
				this.panel = panel;
				panel.widget.addView(this.widget);
			};	
			this.setHover = function(hover){
				this.hover = hover;
				this.widget.setBackgroundDrawable(hover?this.hoverBackground:this.baseBackground);
			};
			this.setEnabled = function(enabled){
				this.enabled = enabled;
				this.widget.setAlpha(enabled?1:0.4);
				this.widget.setClickable(enabled);
			};
			this.isEnabled = function(){
				return this.enabled;
			};
			this.setText = function(text){
				ModPEGUI.setText(this.widget,text,false,"#FFFFFF");
				this.text = text;
			};
			this.getText = function(){
				return this.text;
			};
		};
		return new helper();
	}
};



/// - ######################################## - ///
/// - ############# - MOD CORE - ############# - ///
/// - ######################################## - ///
/// - ########### - BUTTON TYPES - ########### - ///
/// - ######################################## - ///



ModPEGUI.lightTextButton = function(text,x,y,width,height,action){
	var button = new ModPEGUI.button("Button",x,y,width,height,action);
	var backgrounds = {default_normal:Background.lightButton.default_normal(width,height),default_hover:Background.lightButton.default_hover(width,height),pressed_normal:Background.lightButton.pressed_normal(width,height),pressed_hover:Background.lightButton.pressed_hover(width,height)};
	button.onHover = function(hover){switch(hover){
		case true:button.border.getBackground().setColorFilter(android.graphics.Color.WHITE,android.graphics.PorterDuff.Mode.MULTIPLY);button.panel.setBackgroundDrawable(button.pressed ? backgrounds.pressed_hover : backgrounds.default_hover);button.panel.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));break;
		case false:button.border.getBackground().setColorFilter(android.graphics.Color.BLACK,android.graphics.PorterDuff.Mode.MULTIPLY);button.panel.setBackgroundDrawable(button.pressed ? backgrounds.pressed_normal : backgrounds.default_normal);button.panel.setTextColor(android.graphics.Color.parseColor("#555555"));break;
	}};
	button.setHover(false);
	button.onPress = function(press){switch(press){
		case true:button.panel.setBackgroundDrawable(button.hover ? backgrounds.pressed_hover : backgrounds.pressed_normal);button.panel.setPadding(0,1*GuiData.guiScale,0,0);break;
		case false:button.panel.setBackgroundDrawable(button.hover ? backgrounds.default_hover : backgrounds.default_normal);button.panel.setPadding(0,0*GuiData.guiScale,0,0);break;
	}};
	button.setPressed(false);
	ModPEGUI.setText(button.panel,text,false,"#555555");
	return button;
};
ModPEGUI.darkTextButton = function(text,x,y,width,height,action){
	var button = new ModPEGUI.button("Button",x,y,width,height,action);
	var backgrounds = {default_normal:Background.darkButton.default_normal(width,height),default_hover:Background.darkButton.default_hover(width,height),pressed_normal:Background.darkButton.pressed_normal(width,height),pressed_hover:Background.darkButton.pressed_hover(width,height)};
	button.onHover = function(hover){switch(hover){
		case true:button.border.getBackground().setColorFilter(android.graphics.Color.WHITE,android.graphics.PorterDuff.Mode.MULTIPLY);button.panel.setBackgroundDrawable(button.pressed ? backgrounds.pressed_hover : backgrounds.default_hover);break;
		case false:button.border.getBackground().setColorFilter(android.graphics.Color.BLACK,android.graphics.PorterDuff.Mode.MULTIPLY);button.panel.setBackgroundDrawable(button.pressed ? backgrounds.pressed_normal : backgrounds.default_normal);break;
	}};
	button.setHover(false);
	button.onPress = function(press){switch(press){
		case true:button.panel.setBackgroundDrawable(button.hover ? backgrounds.pressed_hover : backgrounds.pressed_normal);button.panel.setPadding(0,1*GuiData.guiScale,0,0);break;
		case false:button.panel.setBackgroundDrawable(button.hover ? backgrounds.default_hover : backgrounds.default_normal);button.panel.setPadding(0,0*GuiData.guiScale,0,0);break;
	}};
	button.setPressed(false);
	ModPEGUI.setText(button.panel,text,false,"#FFFFFF");
	return button;
};
ModPEGUI.lightGlyphButton = function(image,x,y,width,height,action){
	var button = new ModPEGUI.button("ImageView",x,y,width,height,action);
	var backgrounds = {default_normal:Background.lightButton.default_normal(width,height),default_hover:Background.lightButton.default_hover(width,height),pressed_normal:Background.lightButton.pressed_normal(width,height),pressed_hover:Background.lightButton.pressed_hover(width,height)};
	button.panel.setScaleType(android.widget.ImageView.ScaleType.CENTER);
	button.panel.setImageBitmap(image.getBitmap());
	button.onHover = function(hover){switch(hover){
		case true:button.border.getBackground().setColorFilter(android.graphics.Color.WHITE,android.graphics.PorterDuff.Mode.MULTIPLY);button.panel.setBackgroundDrawable(button.pressed ? backgrounds.pressed_hover : backgrounds.default_hover);break;
		case false:button.border.getBackground().setColorFilter(android.graphics.Color.BLACK,android.graphics.PorterDuff.Mode.MULTIPLY);button.panel.setBackgroundDrawable(button.pressed ? backgrounds.pressed_normal : backgrounds.default_normal);break;
	}};
	button.setHover(false);
	button.onPress = function(press){switch(press){
		case true:button.panel.setBackgroundDrawable(button.hover ? backgrounds.pressed_hover : backgrounds.pressed_normal);button.panel.setPadding(0,1*GuiData.guiScale,0,0);break;
		case false:button.panel.setBackgroundDrawable(button.hover ? backgrounds.default_hover : backgrounds.default_normal);button.panel.setPadding(0,0*GuiData.guiScale,0,0);break;
	}};
	button.setPressed(false);
	return button;
};
ModPEGUI.darkGlyphButton = function(image,x,y,width,height,action){
	var button = new ModPEGUI.button("ImageView",x,y,width,height,action);
	var backgrounds = {default_normal:Background.darkButton.default_normal(width,height),default_hover:Background.darkButton.default_hover(width,height),pressed_normal:Background.darkButton.pressed_normal(width,height),pressed_hover:Background.darkButton.pressed_hover(width,height)};
	button.panel.setScaleType(android.widget.ImageView.ScaleType.CENTER);
	button.panel.setImageBitmap(image.getBitmap());
	button.onHover = function(hover){switch(hover){
		case true:button.border.getBackground().setColorFilter(android.graphics.Color.WHITE,android.graphics.PorterDuff.Mode.MULTIPLY);button.panel.setBackgroundDrawable(button.pressed ? backgrounds.pressed_hover : backgrounds.default_hover);break;
		case false:button.border.getBackground().setColorFilter(android.graphics.Color.BLACK,android.graphics.PorterDuff.Mode.MULTIPLY);button.panel.setBackgroundDrawable(button.pressed ? backgrounds.pressed_normal : backgrounds.default_normal);break;
	}};
	button.setHover(false);
	button.onPress = function(press){switch(press){
		case true:button.panel.setBackgroundDrawable(button.hover ? backgrounds.pressed_hover : backgrounds.pressed_normal);button.panel.setPadding(0,1*GuiData.guiScale,0,0);break;
		case false:button.panel.setBackgroundDrawable(button.hover ? backgrounds.default_hover : backgrounds.default_normal);button.panel.setPadding(0,0*GuiData.guiScale,0,0);break;
	}};
	button.setPressed(false);
	return button;
};
ModPEGUI.lightContentButton = function(views,x,y,width,height,action){
	var button = new ModPEGUI.button("RelativeLayout",x,y,width,height,action);
	var backgrounds = {default_normal:Background.lightButton.default_normal(width,height),default_hover:Background.lightButton.default_hover(width,height),pressed_normal:Background.lightButton.pressed_normal(width,height),pressed_hover:Background.lightButton.pressed_hover(width,height)};
	for(let view of views){button.panel.addView(view.widget);}
	button.onHover = function(hover){switch(hover){
		case true:button.border.getBackground().setColorFilter(android.graphics.Color.WHITE,android.graphics.PorterDuff.Mode.MULTIPLY);button.panel.setBackgroundDrawable(button.pressed ? backgrounds.pressed_hover : backgrounds.default_hover);break;
		case false:button.border.getBackground().setColorFilter(android.graphics.Color.BLACK,android.graphics.PorterDuff.Mode.MULTIPLY);button.panel.setBackgroundDrawable(button.pressed ? backgrounds.pressed_normal : backgrounds.default_normal);break;
	}};
	button.setHover(false);
	button.onPress = function(press){switch(press){
		case true:button.panel.setBackgroundDrawable(button.hover ? backgrounds.pressed_hover : backgrounds.pressed_normal);button.panel.setPadding(0,1*GuiData.guiScale,0,0);break;
		case false:button.panel.setBackgroundDrawable(button.hover ? backgrounds.default_hover : backgrounds.default_normal);button.panel.setPadding(0,0*GuiData.guiScale,0,0);break;
	}};
	button.setPressed(false);
	return button;
};
ModPEGUI.darkContentButton = function(views,x,y,width,height,action){
	var button = new ModPEGUI.button("RelativeLayout",x,y,width,height,action);
	var backgrounds = {default_normal:Background.darkButton.default_normal(width,height),default_hover:Background.darkButton.default_hover(width,height),pressed_normal:Background.darkButton.pressed_normal(width,height),pressed_hover:Background.darkButton.pressed_hover(width,height)};
	for(let view of views){button.panel.addView(view.widget);}
	button.onHover = function(hover){switch(hover){
		case true:button.border.getBackground().setColorFilter(android.graphics.Color.WHITE,android.graphics.PorterDuff.Mode.MULTIPLY);button.panel.setBackgroundDrawable(button.pressed ? backgrounds.pressed_hover : backgrounds.default_hover);break;
		case false:button.border.getBackground().setColorFilter(android.graphics.Color.BLACK,android.graphics.PorterDuff.Mode.MULTIPLY);button.panel.setBackgroundDrawable(button.pressed ? backgrounds.pressed_normal : backgrounds.default_normal);break;
	}};
	button.setHover(false);
	button.onPress = function(press){switch(press){
		case true:button.panel.setBackgroundDrawable(button.hover ? backgrounds.pressed_hover : backgrounds.pressed_normal);button.panel.setPadding(0,1*GuiData.guiScale,0,0);break;
		case false:button.panel.setBackgroundDrawable(button.hover ? backgrounds.default_hover : backgrounds.default_normal);button.panel.setPadding(0,0*GuiData.guiScale,0,0);break;
	}};
	button.setPressed(false);
	return button;
};



/// - ######################################## - ///
/// - ########### - BUTTON TYPES - ########### - ///
/// - ######################################## - ///
/// - ########### - DIALOG TYPES - ########### - ///
/// - ######################################## - ///



ModPEGUI.twoButtonsDialog = function(title,text,width,height,buttons){	
	var dialog = new ModPEGUI.dialog(1,width,height);
	dialog.title = GuiUtils.createLayoutView(new android.widget.TextView(GuiData.context),8*GuiData.guiScale,10*GuiData.guiScale,(width-16)*GuiData.guiScale,8*GuiData.guiScale);
	dialog.title.setPadding(1*GuiData.guiScale,0,1*GuiData.guiScale,0);
	dialog.title.setGravity(android.view.Gravity.LEFT|android.view.Gravity.TOP);
	ModPEGUI.setText(dialog.title,title,false,"#555555");
	dialog.widget.addView(dialog.title);
	dialog.panel = GuiUtils.createLayoutView(new android.widget.TextView(GuiData.context),8*GuiData.guiScale,23*GuiData.guiScale,(width-16)*GuiData.guiScale,(height-99)*GuiData.guiScale);
	dialog.panel.setPadding(2*GuiData.guiScale,2*GuiData.guiScale,2*GuiData.guiScale,2*GuiData.guiScale);
	dialog.panel.setLineSpacing(1*GuiData.guiScale,1);
	ModPEGUI.setText(dialog.panel,text,false,"#FFFFFF");
	dialog.widget.addView(dialog.panel);
	buttons.forEach(function(element,index){
		element.renderOn(dialog);
	});
	return dialog;
};
ModPEGUI.oneButtonDialog = function(title,text,width,height,buttons){
	var dialog = new ModPEGUI.dialog(2,width,height);
	dialog.title = GuiUtils.createLayoutView(new android.widget.TextView(GuiData.context),8*GuiData.guiScale,10*GuiData.guiScale,(width-16)*GuiData.guiScale,8*GuiData.guiScale);
	dialog.title.setPadding(1*GuiData.guiScale,0,1*GuiData.guiScale,0);
	dialog.title.setGravity(android.view.Gravity.LEFT|android.view.Gravity.TOP);
	ModPEGUI.setText(dialog.title,title,false,"#555555");
	dialog.widget.addView(dialog.title);
	dialog.panel = GuiUtils.createLayoutView(new android.widget.TextView(GuiData.context),8*GuiData.guiScale,23*GuiData.guiScale,(width-16)*GuiData.guiScale,(height-65)*GuiData.guiScale);
	dialog.panel.setPadding(2*GuiData.guiScale,2*GuiData.guiScale,2*GuiData.guiScale,2*GuiData.guiScale);
	dialog.panel.setLineSpacing(1*GuiData.guiScale,1);
	ModPEGUI.setText(dialog.panel,text,false,"#FFFFFF");
	dialog.widget.addView(dialog.panel);
	buttons.forEach(function(element,index){
		element.renderOn(dialog);
	});
	return dialog;
};
ModPEGUI.noButtonsDialog = function(title,text,width,height){
	var dialog = new ModPEGUI.dialog(3,width,height);
	dialog.title = GuiUtils.createLayoutView(new android.widget.TextView(GuiData.context),8*GuiData.guiScale,10*GuiData.guiScale,(width-16)*GuiData.guiScale,8*GuiData.guiScale);
	dialog.title.setPadding(1*GuiData.guiScale,0,1*GuiData.guiScale,0);
	dialog.title.setGravity(android.view.Gravity.LEFT|android.view.Gravity.TOP);
	ModPEGUI.setText(dialog.title,title,false,"#555555");
	dialog.widget.addView(dialog.title);
	dialog.panel = GuiUtils.createLayoutView(new android.widget.TextView(GuiData.context),8*GuiData.guiScale,23*GuiData.guiScale,(width-16)*GuiData.guiScale,(height-31)*GuiData.guiScale);
	dialog.panel.setPadding(2*GuiData.guiScale,2*GuiData.guiScale,2*GuiData.guiScale,2*GuiData.guiScale);
	dialog.panel.setLineSpacing(1*GuiData.guiScale,1);
	ModPEGUI.setText(dialog.panel,text,false,"#FFFFFF");
	dialog.widget.addView(dialog.panel);
	return dialog;
};
ModPEGUI.noTitleNoButtonsDialog = function(text,width,height){
	var dialog = new ModPEGUI.dialog(4,width,height);
	dialog.panel = GuiUtils.createLayoutView(new android.widget.TextView(GuiData.context),8*GuiData.guiScale,8*GuiData.guiScale,(width-16)*GuiData.guiScale,(height-16)*GuiData.guiScale);
	dialog.panel.setPadding(2*GuiData.guiScale,2*GuiData.guiScale,2*GuiData.guiScale,2*GuiData.guiScale);
	dialog.panel.setLineSpacing(1*GuiData.guiScale,1);
	ModPEGUI.setText(dialog.panel,text,false,"#FFFFFF");
	dialog.widget.addView(dialog.panel);
	return dialog;
};



/// - ######################################## - ///
/// - ########### - DIALOG TYPES - ########### - ///
/// - ######################################## - ///
/// - ########### - TOGGLE TYPES - ########### - ///
/// - ######################################## - ///



ModPEGUI.lightTextToggle = function(text,x,y,width,height,press,unpress){
	var toggle = new ModPEGUI.toggle(x,y,width,height,press,unpress);
	var backgrounds = {default_normal:Background.lightButton.default_normal(width,height),default_hover:Background.lightButton.default_hover(width,height),toggled_normal:Background.lightButton.pressed_normal(width,height),toggled_hover:Background.lightButton.pressed_hover(width,height)};
	toggle.panel = GuiUtils.createLayoutView(new android.widget.Button(GuiData.context),GuiData.guiScale,GuiData.guiScale,(width-2)*GuiData.guiScale,(height-2)*GuiData.guiScale);
	toggle.panel.setClickable(false);
	toggle.border = GuiUtils.createLayoutView(new android.widget.ImageView(GuiData.context),0,0,width*GuiData.guiScale,height*GuiData.guiScale);
	toggle.border.setBackgroundDrawable(ImageUtils.getStretched(BitmapUtils.getTrimmed(BitmapUtils.getFromTexture("textures/gui/newgui/focusBorder.png"),0,0,5,5),1,1,3,3,width,height));
	toggle.border.setClickable(false);	
	toggle.widget.addView(toggle.panel);
	toggle.widget.addView(toggle.border);
	toggle.onHover = function(hover){switch(hover){
		case true:toggle.border.getBackground().setColorFilter(android.graphics.Color.WHITE,android.graphics.PorterDuff.Mode.MULTIPLY);toggle.panel.setBackgroundDrawable(toggle.toggled ? backgrounds.toggled_hover : backgrounds.default_hover);toggle.panel.setTextColor(android.graphics.Color.parseColor("#FFFFFF"));break;
		case false:toggle.border.getBackground().setColorFilter(android.graphics.Color.BLACK,android.graphics.PorterDuff.Mode.MULTIPLY);toggle.panel.setBackgroundDrawable(toggle.toggled ? backgrounds.toggled_normal : backgrounds.default_normal);toggle.panel.setTextColor(android.graphics.Color.parseColor("#555555"));break;
	}};
	toggle.setHover(false);
	toggle.onToggle = function(toggled){switch(toggled){
		case true:toggle.panel.setBackgroundDrawable(toggle.hover ? backgrounds.toggled_hover : backgrounds.toggled_normal);toggle.panel.setPadding(0,1*GuiData.guiScale,0,0);break;
		case false:toggle.panel.setBackgroundDrawable(toggle.hover ? backgrounds.default_hover : backgrounds.default_normal);toggle.panel.setPadding(0,0*GuiData.guiScale,0,0);break;
	}};
	toggle.setToggled(false);
	ModPEGUI.setText(toggle.panel,text,false,"#555555");
	return toggle;
};
ModPEGUI.darkTextToggle = function(text,x,y,width,height,press,unpress){
	var toggle = new ModPEGUI.toggle(x,y,width,height,press,unpress);
	var backgrounds = {default_normal:Background.darkButton.default_normal(width,height),default_hover:Background.darkButton.default_hover(width,height),toggled_normal:Background.darkButton.pressed_normal(width,height),toggled_hover:Background.darkButton.pressed_hover(width,height)};
	toggle.panel = GuiUtils.createLayoutView(new android.widget.Button(GuiData.context),GuiData.guiScale,GuiData.guiScale,(width-2)*GuiData.guiScale,(height-2)*GuiData.guiScale);
	toggle.panel.setClickable(false);
	toggle.border = GuiUtils.createLayoutView(new android.widget.ImageView(GuiData.context),0,0,width*GuiData.guiScale,height*GuiData.guiScale);
	toggle.border.setBackgroundDrawable(ImageUtils.getStretched(BitmapUtils.getTrimmed(BitmapUtils.getFromTexture("textures/gui/newgui/focusBorder.png"),0,0,5,5),1,1,3,3,width,height));
	toggle.border.setClickable(false);	
	toggle.widget.addView(toggle.panel);
	toggle.widget.addView(toggle.border);
	toggle.onHover = function(hover){switch(hover){
		case true:toggle.border.getBackground().setColorFilter(android.graphics.Color.WHITE,android.graphics.PorterDuff.Mode.MULTIPLY);toggle.panel.setBackgroundDrawable(toggle.toggled ? backgrounds.toggled_hover : backgrounds.default_hover);break;
		case false:toggle.border.getBackground().setColorFilter(android.graphics.Color.BLACK,android.graphics.PorterDuff.Mode.MULTIPLY);toggle.panel.setBackgroundDrawable(toggle.toggled ? backgrounds.toggled_normal : backgrounds.default_normal);break;
	}};
	toggle.setHover(false);
	toggle.onToggle = function(toggled){switch(toggled){
		case true:toggle.panel.setBackgroundDrawable(toggle.hover ? backgrounds.toggled_hover : backgrounds.toggled_normal);toggle.panel.setPadding(0,1*GuiData.guiScale,0,0);break;
		case false:toggle.panel.setBackgroundDrawable(toggle.hover ? backgrounds.default_hover : backgrounds.default_normal);toggle.panel.setPadding(0,0*GuiData.guiScale,0,0);break;
	}};
	toggle.setToggled(false);
	ModPEGUI.setText(toggle.panel,text,false,"#FFFFFF");
	return toggle;
};
ModPEGUI.lightGlyphToggle = function(image,x,y,width,height,press,unpress){
	var toggle = new ModPEGUI.toggle(x,y,width,height,press,unpress);
	var backgrounds = {default_normal:Background.lightButton.default_normal(width,height),default_hover:Background.lightButton.default_hover(width,height),toggled_normal:Background.lightButton.pressed_normal(width,height),toggled_hover:Background.lightButton.pressed_hover(width,height)};
	toggle.panel = GuiUtils.createLayoutView(new android.widget.ImageView(GuiData.context),GuiData.guiScale,GuiData.guiScale,(width-2)*GuiData.guiScale,(height-2)*GuiData.guiScale);
	toggle.panel.setScaleType(android.widget.ImageView.ScaleType.CENTER);
	toggle.panel.setImageBitmap(image.getBitmap());
	toggle.panel.setClickable(false);
	toggle.border = GuiUtils.createLayoutView(new android.widget.ImageView(GuiData.context),0,0,width*GuiData.guiScale,height*GuiData.guiScale);
	toggle.border.setBackgroundDrawable(ImageUtils.getStretched(BitmapUtils.getTrimmed(BitmapUtils.getFromTexture("textures/gui/newgui/focusBorder.png"),0,0,5,5),1,1,3,3,width,height));
	toggle.border.setClickable(false);	
	toggle.widget.addView(toggle.panel);
	toggle.widget.addView(toggle.border);
	toggle.onHover = function(hover){switch(hover){
		case true:toggle.border.getBackground().setColorFilter(android.graphics.Color.WHITE,android.graphics.PorterDuff.Mode.MULTIPLY);toggle.panel.setBackgroundDrawable(toggle.toggled ? backgrounds.toggled_hover : backgrounds.default_hover);break;
		case false:toggle.border.getBackground().setColorFilter(android.graphics.Color.BLACK,android.graphics.PorterDuff.Mode.MULTIPLY);toggle.panel.setBackgroundDrawable(toggle.toggled ? backgrounds.toggled_normal : backgrounds.default_normal);break;
	}};
	toggle.setHover(false);
	toggle.onToggle = function(toggled){switch(toggled){
		case true:toggle.panel.setBackgroundDrawable(toggle.hover ? backgrounds.toggled_hover : backgrounds.toggled_normal);toggle.panel.setPadding(0,1*GuiData.guiScale,0,0);break;
		case false:toggle.panel.setBackgroundDrawable(toggle.hover ? backgrounds.default_hover : backgrounds.default_normal);toggle.panel.setPadding(0,0*GuiData.guiScale,0,0);break;
	}};
	toggle.setToggled(false);
	return toggle;
};
ModPEGUI.darkGlyphToggle = function(image,x,y,width,height,press,unpress){
	var toggle = new ModPEGUI.toggle(x,y,width,height,press,unpress);
	var backgrounds = {default_normal:Background.darkButton.default_normal(width,height),default_hover:Background.darkButton.default_hover(width,height),toggled_normal:Background.darkButton.pressed_normal(width,height),toggled_hover:Background.darkButton.pressed_hover(width,height)};
	toggle.panel = GuiUtils.createLayoutView(new android.widget.ImageView(GuiData.context),GuiData.guiScale,GuiData.guiScale,(width-2)*GuiData.guiScale,(height-2)*GuiData.guiScale);
	toggle.panel.setScaleType(android.widget.ImageView.ScaleType.CENTER);
	toggle.panel.setImageBitmap(image.getBitmap());
	toggle.panel.setClickable(false);
	toggle.border = GuiUtils.createLayoutView(new android.widget.ImageView(GuiData.context),0,0,width*GuiData.guiScale,height*GuiData.guiScale);
	toggle.border.setBackgroundDrawable(ImageUtils.getStretched(BitmapUtils.getTrimmed(BitmapUtils.getFromTexture("textures/gui/newgui/focusBorder.png"),0,0,5,5),1,1,3,3,width,height));
	toggle.border.setClickable(false);	
	toggle.widget.addView(toggle.panel);
	toggle.widget.addView(toggle.border);
	toggle.onHover = function(hover){switch(hover){
		case true:toggle.border.getBackground().setColorFilter(android.graphics.Color.WHITE,android.graphics.PorterDuff.Mode.MULTIPLY);toggle.panel.setBackgroundDrawable(toggle.toggled ? backgrounds.toggled_hover : backgrounds.default_hover);break;
		case false:toggle.border.getBackground().setColorFilter(android.graphics.Color.BLACK,android.graphics.PorterDuff.Mode.MULTIPLY);toggle.panel.setBackgroundDrawable(toggle.toggled ? backgrounds.toggled_normal : backgrounds.default_normal);break;
	}};
	toggle.setHover(false);
	toggle.onToggle = function(toggled){switch(toggled){
		case true:toggle.panel.setBackgroundDrawable(toggle.hover ? backgrounds.toggled_hover : backgrounds.toggled_normal);toggle.panel.setPadding(0,1*GuiData.guiScale,0,0);break;
		case false:toggle.panel.setBackgroundDrawable(toggle.hover ? backgrounds.default_hover : backgrounds.default_normal);toggle.panel.setPadding(0,0*GuiData.guiScale,0,0);break;
	}};
	toggle.setToggled(false);
	return toggle;
};
ModPEGUI.lightContentToggle = function(views,x,y,width,height,press,unpress){
	var toggle = new ModPEGUI.toggle(x,y,width,height,press,unpress);
	var backgrounds = {default_normal:Background.lightButton.default_normal(width,height),default_hover:Background.lightButton.default_hover(width,height),toggled_normal:Background.lightButton.pressed_normal(width,height),toggled_hover:Background.lightButton.pressed_hover(width,height)};
	toggle.panel = GuiUtils.createLayoutView(new android.widget.RelativeLayout(GuiData.context),GuiData.guiScale,GuiData.guiScale,(width-2)*GuiData.guiScale,(height-2)*GuiData.guiScale);
	toggle.panel.setClickable(false);
	toggle.border = GuiUtils.createLayoutView(new android.widget.ImageView(GuiData.context),0,0,width*GuiData.guiScale,height*GuiData.guiScale);
	toggle.border.setBackgroundDrawable(ImageUtils.getStretched(BitmapUtils.getTrimmed(BitmapUtils.getFromTexture("textures/gui/newgui/focusBorder.png"),0,0,5,5),1,1,3,3,width,height));
	toggle.border.setClickable(false);	
	toggle.widget.addView(toggle.panel);
	toggle.widget.addView(toggle.border);
	for(let view of views){toggle.panel.addView(view.widget);}
	toggle.onHover = function(hover){switch(hover){
		case true:toggle.border.getBackground().setColorFilter(android.graphics.Color.WHITE,android.graphics.PorterDuff.Mode.MULTIPLY);toggle.panel.setBackgroundDrawable(toggle.toggled ? backgrounds.toggled_hover : backgrounds.default_hover);break;
		case false:toggle.border.getBackground().setColorFilter(android.graphics.Color.BLACK,android.graphics.PorterDuff.Mode.MULTIPLY);toggle.panel.setBackgroundDrawable(toggle.toggled ? backgrounds.toggled_normal : backgrounds.default_normal);break;
	}};
	toggle.setHover(false);
	toggle.onToggle = function(toggled){switch(toggled){
		case true:toggle.panel.setBackgroundDrawable(toggle.hover ? backgrounds.toggled_hover : backgrounds.toggled_normal);toggle.panel.setPadding(0,1*GuiData.guiScale,0,0);break;
		case false:toggle.panel.setBackgroundDrawable(toggle.hover ? backgrounds.default_hover : backgrounds.default_normal);toggle.panel.setPadding(0,0*GuiData.guiScale,0,0);break;
	}};
	toggle.setToggled(false);
	return toggle;
};
ModPEGUI.darkContentToggle = function(views,x,y,width,height,press,unpress){
	var toggle = new ModPEGUI.toggle(x,y,width,height,press,unpress);
	var backgrounds = {default_normal:Background.darkButton.default_normal(width,height),default_hover:Background.darkButton.default_hover(width,height),toggled_normal:Background.darkButton.pressed_normal(width,height),toggled_hover:Background.darkButton.pressed_hover(width,height)};
	toggle.panel = GuiUtils.createLayoutView(new android.widget.RelativeLayout(GuiData.context),GuiData.guiScale,GuiData.guiScale,(width-2)*GuiData.guiScale,(height-2)*GuiData.guiScale);
	toggle.panel.setClickable(false);
	toggle.border = GuiUtils.createLayoutView(new android.widget.ImageView(GuiData.context),0,0,width*GuiData.guiScale,height*GuiData.guiScale);
	toggle.border.setBackgroundDrawable(ImageUtils.getStretched(BitmapUtils.getTrimmed(BitmapUtils.getFromTexture("textures/gui/newgui/focusBorder.png"),0,0,5,5),1,1,3,3,width,height));
	toggle.border.setClickable(false);	
	toggle.widget.addView(toggle.panel);
	toggle.widget.addView(toggle.border);
	for(let view of views){toggle.panel.addView(view.widget);}
	toggle.onHover = function(hover){switch(hover){
		case true:toggle.border.getBackground().setColorFilter(android.graphics.Color.WHITE,android.graphics.PorterDuff.Mode.MULTIPLY);toggle.panel.setBackgroundDrawable(toggle.toggled ? backgrounds.toggled_hover : backgrounds.default_hover);break;
		case false:toggle.border.getBackground().setColorFilter(android.graphics.Color.BLACK,android.graphics.PorterDuff.Mode.MULTIPLY);toggle.panel.setBackgroundDrawable(toggle.toggled ? backgrounds.toggled_normal : backgrounds.default_normal);break;
	}};
	toggle.setHover(false);
	toggle.onToggle = function(toggled){switch(toggled){
		case true:toggle.panel.setBackgroundDrawable(toggle.hover ? backgrounds.toggled_hover : backgrounds.toggled_normal);toggle.panel.setPadding(0,1*GuiData.guiScale,0,0);break;
		case false:toggle.panel.setBackgroundDrawable(toggle.hover ? backgrounds.default_hover : backgrounds.default_normal);toggle.panel.setPadding(0,0*GuiData.guiScale,0,0);break;
	}};
	toggle.setToggled(false);
	return toggle;
};
ModPEGUI.checkboxToggle = function(x,y,press,unpress){
	var toggle = new ModPEGUI.toggle(x,y,10,10,press,unpress);
	var backgrounds = {default_normal:ImageUtils.getFromTexture("textures/gui/newgui/settings/radio_off.png"),default_hover:ImageUtils.getFromTexture("textures/gui/newgui/settings/radio_off_hover.png"),toggled_normal:ImageUtils.getFromTexture("textures/gui/newgui/settings/radio_checked.png"),toggled_hover:ImageUtils.getFromTexture("textures/gui/newgui/settings/radio_checked_hover.png")};
	toggle.onHover = function(hover){switch(hover){
		case true:toggle.widget.setBackgroundDrawable(toggle.toggled ? backgrounds.toggled_hover : backgrounds.default_hover);break;
		case false:toggle.widget.setBackgroundDrawable(toggle.toggled ? backgrounds.toggled_normal : backgrounds.default_normal);break;
	}};
	toggle.setHover(false);
	toggle.onToggle = function(toggled){switch(toggled){
		case true:toggle.widget.setBackgroundDrawable(toggle.hover ? backgrounds.toggled_hover : backgrounds.toggled_normal);break;
		case false:toggle.widget.setBackgroundDrawable(toggle.hover ? backgrounds.default_hover : backgrounds.default_normal);break;
	}};
	toggle.setToggled(false);
	return toggle;
};
ModPEGUI.radioToggle = function(x,y,press,unpress){
	var toggle = new ModPEGUI.toggle(x,y,10,10,press,unpress);
	var backgrounds = {default_normal:ImageUtils.getFromTexture("textures/gui/newgui/settings/radio_off.png"),default_hover:ImageUtils.getFromTexture("textures/gui/newgui/settings/radio_off_hover.png"),toggled_normal:ImageUtils.getFromTexture("textures/gui/newgui/settings/radio_on.png"),toggled_hover:ImageUtils.getFromTexture("textures/gui/newgui/settings/radio_on_hover.png")};
	toggle.onHover = function(hover){switch(hover){
		case true:toggle.widget.setBackgroundDrawable(toggle.toggled ? backgrounds.toggled_hover : backgrounds.default_hover);break;
		case false:toggle.widget.setBackgroundDrawable(toggle.toggled ? backgrounds.toggled_normal : backgrounds.default_normal);break;
	}};
	toggle.setHover(false);
	toggle.onToggle = function(toggled){switch(toggled){
		case true:toggle.widget.setBackgroundDrawable(toggle.hover ? backgrounds.toggled_hover : backgrounds.toggled_normal);break;
		case false:toggle.widget.setBackgroundDrawable(toggle.hover ? backgrounds.default_hover : backgrounds.default_normal);break;
	}};
	toggle.setToggled(false);
	return toggle;
};
ModPEGUI.switchToggle = function(x,y,press,unpress){
	var toggle = new ModPEGUI.toggle(x,y,30,16,press,unpress);
	var backgrounds = {default_normal:ImageUtils.getFromTexture("textures/gui/newgui/settings/toggle_off.png"),default_hover:ImageUtils.getFromTexture("textures/gui/newgui/settings/toggle_off_hover.png"),toggled_normal:ImageUtils.getFromTexture("textures/gui/newgui/settings/toggle_on.png"),toggled_hover:ImageUtils.getFromTexture("textures/gui/newgui/settings/toggle_on_hover.png")};
	toggle.onHover = function(hover){switch(hover){
		case true:toggle.widget.setBackgroundDrawable(toggle.toggled ? backgrounds.toggled_hover : backgrounds.default_hover);break;
		case false:toggle.widget.setBackgroundDrawable(toggle.toggled ? backgrounds.toggled_normal : backgrounds.default_normal);break;
	}};
	toggle.setHover(false);
	toggle.onToggle = function(toggled){switch(toggled){
		case true:toggle.widget.setBackgroundDrawable(toggle.hover ? backgrounds.toggled_hover : backgrounds.toggled_normal);break;
		case false:toggle.widget.setBackgroundDrawable(toggle.hover ? backgrounds.default_hover : backgrounds.default_normal);break;
	}};
	toggle.setToggled(false);
	return toggle;
};



/// - ######################################## - ///
/// - ########### - TOGGLE TYPES - ########### - ///
/// - ######################################## - ///
